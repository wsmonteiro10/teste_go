// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/listas_arquivos": {
            "get": {
                "security": [
                    {
                        "ClientSecret": []
                    }
                ],
                "description": "Retorna todos os arquivos da pasta uploads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arquivos"
                ],
                "summary": "Retorna todos os arquivos da pasta uploads",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Endpoint básico para teste de vida do servidor.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Retorna pong",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "security": [
                    {
                        "ClientSecret": []
                    }
                ],
                "description": "Recebe arquivos grandes via multipart/form-data, processa e salva no banco de forma eficiente",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "ETL Rápido"
                ],
                "summary": "ETL rápido: Upload de TXT ou CSV e grava no Postgres",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Arquivo para upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/upload_semindex": {
            "post": {
                "security": [
                    {
                        "ClientSecret": []
                    }
                ],
                "description": "Insere dados em massa sem índice para máxima performance",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "ETL Rápido"
                ],
                "summary": "ETL: Upload de TXT ou CSV direto no Postgres sem índice",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Arquivo para upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ClientSecret": {
            "type": "apiKey",
            "name": "Client-Secret",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Desafio Técnico | BU Sales & Marketing",
	Description:      "Desafio Técnico | BU Sales & Marketing.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
